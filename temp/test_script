#!/usr/bin/env python

import os
import sys
import subprocess
import fileinput

def main():
    if len(sys.argv) < 2:
        sys.exit(1)

    dir = sys.argv[1]

    os.chdir(dir)
    bcfiles = []
    for file in os.listdir("./"):
        if file.endswith(".bc") and "_opt" not in file:
            #skip files that aren't assembling due to unknown issues
            bcfiles.append(os.path.abspath(file))

    for file in bcfiles:
        print("running pass on " + file)
        
        #generate assembly and replace llvm intrinsic with 
        #actual asm instructions
        asm_file = file.replace(".bc", ".s")
        binary = file.replace(".bc", "")        

        subprocess.check_call(["llc", "-O0", "-mtriple", "armv7a-linux-gnueabi", file, "-o", asm_file])
        subprocess.check_call(["arm-linux-gnueabi-gcc", "-static",   
            #"-I/usr/lib/gcc/arm-linux-gnueabi/4.6/include", "-I/usr/lib/gcc/arm-linux-gnueabi/4.6/include-fixed", 
            #"-I/usr/arm-linux-gnueabi/include", "-I/usr/include",
            "-L/usr/arm-linux-gnueabi/lib", "-L/usr/lib/gcc/arm-linux-gnueabi",
            asm_file, "-lrt", "-o", binary])
        subprocess.check_call(["chmod", "+x", binary])

if __name__ == "__main__":
    main()
